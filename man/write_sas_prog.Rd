% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_sas_prog.R
\name{write_sas_prog}
\alias{write_sas_prog}
\title{Eksporter data frame til tekstfil og lag SAS-program for innlesning}
\usage{
write_sas_prog(data, filsti, filnavn = NULL, libname = "wd")
}
\arguments{
\item{data}{Datasettet som skal eksporteres til SAS-format. Dette kan være en data.frame eller tibble.}

\item{filsti}{En karakterstreng som spesifiserer banen der filene skal lagres (både datafilen og SAS-programmet).}

\item{filnavn}{En karakterstreng som spesifiserer navnet på filene som skal genereres. Hvis ikke angitt, brukes navnet på objektet \code{data}.}

\item{libname}{En karakterstreng som spesifiserer navnet på SAS-libnavn som skal brukes i SAS-programmet. Standard er \code{"wd"}.}
}
\value{
Ingen returverdi. Funksjonen lagrer en .txt-fil og et SAS-program på den spesifiserte filstien. SAS-programmet må deretter åpnes og kjøres i SAS og da blir det lagret en .sas7bdat-fil på samme område.
}
\description{
Funksjonen eksporterer en data frame til en tekstfil som kan leses av SAS, og genererer samtidig et SAS-program for å lese inn dataene.
Det genererte SAS-programmet kan justeres for å inkludere spesifikke SAS-innstillinger.
}
\details{
Funksjonen konverterer først alle faktorer i datasettet til karakterstrenger og erstatter manglende verdier med tomme strenger.
Deretter lagres dataene som en \code{.txt}-fil og et tilsvarende SAS-program som \code{.sas}-fil ved hjelp av \code{\link{foreign::write.foreign}}.
Funksjonen leser så inn det genererte SAS-programmet og gjør justeringer, som å legge til \code{encoding="utf-8"} og å sette opp et SAS-libnavn.
}
\examples{
# Eksporter et datasett til SAS-format og generer et innlesningsprogram
write_sas_prog(mtcars, filsti = "output/")

# Eksporter med spesifisert filnavn og libname
write_sas_prog(mtcars, filsti = "output/", filnavn = "biler", libname = "mylib")

}
